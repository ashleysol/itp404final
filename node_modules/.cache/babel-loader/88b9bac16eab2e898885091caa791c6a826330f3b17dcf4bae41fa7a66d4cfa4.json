{"ast":null,"code":"var _jsxFileName = \"/Users/ashley/Desktop/frontend-final/src/components/DeleteChecklist.js\",\n  _s = $RefreshSig$();\nimport ChecklistItem from \"./ChecklistItem\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeleteChecklist(props) {\n  _s();\n  const items = props.items.concat({\n    id: \"600\"\n  });\n  const [isBoxChecked, setIsBoxChecked] = useState([]);\n  const [isCheckAll, setIsCheckAll] = useState(false);\n  const [isIndeterminate, setIsInterminate] = useState(false);\n  const checkboxRef = useRef();\n  useEffect(() => {\n    checkboxRef.current.indeterminate = isIndeterminate;\n  }, [2]);\n  let checklist = [];\n  let button = \"\";\n  if (isBoxChecked.length !== 0) {\n    setIsInterminate(true);\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary col-3 mt-2\",\n      onClick: clickHandler,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else {\n    setIsInterminate(false);\n    button = \"\";\n  }\n  const handleSelectAll = e => {\n    setIsCheckAll(!isCheckAll);\n    setIsBoxChecked(items.map(item => item.id));\n    if (isCheckAll) {\n      setIsBoxChecked([]);\n    }\n  };\n  props.items.forEach((item, index) => {\n    var label;\n    if (item.title) {\n      label = item.title;\n    } else {\n      label = item.name;\n    }\n    checklist.push( /*#__PURE__*/_jsxDEV(ChecklistItem, {\n      id: item.id,\n      label: label,\n      checked: isBoxChecked.includes(item.id),\n      onChange: isChecked => {\n        if (isChecked) {\n          setIsBoxChecked(isBoxChecked.concat(item.id));\n        } else {\n          setIsBoxChecked(isBoxChecked.filter(entry => {\n            return entry !== item.id;\n          }));\n        }\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this));\n  });\n  const masterCheckbox = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-check\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      id: \"600\",\n      ref: checkboxRef,\n      checked: isBoxChecked.includes(\"600\"),\n      onChange: isChecked => {\n        handleSelectAll();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"600\",\n      children: \"Select All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this)\n\n  // <ChecklistItem\n  //   key={\"600\"}\n  //   id={\"600\"}\n  //   ref={checkboxRef}\n  //   label={\"Select All\"}\n  //   checked={isBoxChecked.includes(\"600\")}\n  //   onChange={(isChecked) => {\n  //     handleSelectAll();\n  //   }}\n  // />\n  ;\n\n  function clickHandler() {\n    let selectedItems = isBoxChecked.filter(entry => {\n      return entry !== \"600\";\n    });\n    props.onClick(selectedItems.toString());\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: `${props.color}`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Delte \", props.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), masterCheckbox, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), checklist, button]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(DeleteChecklist, \"X1IAuEQaBu5F2pNyXRgiida/XXQ=\");\n_c = DeleteChecklist;\nvar _c;\n$RefreshReg$(_c, \"DeleteChecklist\");","map":{"version":3,"names":["ChecklistItem","useState","useRef","useEffect","DeleteChecklist","props","items","concat","id","isBoxChecked","setIsBoxChecked","isCheckAll","setIsCheckAll","isIndeterminate","setIsInterminate","checkboxRef","current","indeterminate","checklist","button","length","clickHandler","handleSelectAll","e","map","item","forEach","index","label","title","name","push","includes","isChecked","filter","entry","masterCheckbox","selectedItems","onClick","toString","color"],"sources":["/Users/ashley/Desktop/frontend-final/src/components/DeleteChecklist.js"],"sourcesContent":["import ChecklistItem from \"./ChecklistItem\";\nimport { useState, useRef, useEffect } from \"react\";\n\nexport default function DeleteChecklist(props) {\n  const items = props.items.concat({ id: \"600\" });\n  const [isBoxChecked, setIsBoxChecked] = useState([]);\n  const [isCheckAll, setIsCheckAll] = useState(false);\n  const [isIndeterminate, setIsInterminate] = useState(false);\n  const checkboxRef = useRef();\n  useEffect(() => {\n    checkboxRef.current.indeterminate = isIndeterminate;\n  }, [2]);\n\n  let checklist = [];\n  let button = \"\";\n  if (isBoxChecked.length !== 0) {\n    setIsInterminate(true);\n    button = (\n      <button className=\"btn btn-primary col-3 mt-2\" onClick={clickHandler}>\n        Submit\n      </button>\n    );\n  } else {\n    setIsInterminate(false);\n    button = \"\";\n  }\n\n  const handleSelectAll = (e) => {\n    setIsCheckAll(!isCheckAll);\n    setIsBoxChecked(items.map((item) => item.id));\n    if (isCheckAll) {\n      setIsBoxChecked([]);\n    }\n  };\n\n  props.items.forEach((item, index) => {\n    var label;\n    if (item.title) {\n      label = item.title;\n    } else {\n      label = item.name;\n    }\n    checklist.push(\n      <ChecklistItem\n        key={index}\n        id={item.id}\n        label={label}\n        checked={isBoxChecked.includes(item.id)}\n        onChange={(isChecked) => {\n          if (isChecked) {\n            setIsBoxChecked(isBoxChecked.concat(item.id));\n          } else {\n            setIsBoxChecked(\n              isBoxChecked.filter((entry) => {\n                return entry !== item.id;\n              })\n            );\n          }\n        }}\n      />\n    );\n  });\n\n  const masterCheckbox = (\n    <div className=\"form-check\">\n      <input\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        id={\"600\"}\n        ref={checkboxRef}\n        checked={isBoxChecked.includes(\"600\")}\n        onChange={(isChecked) => {\n          handleSelectAll();\n        }}\n      />\n      <label className=\"form-check-label\" htmlFor=\"600\">\n        Select All\n      </label>\n    </div>\n\n    // <ChecklistItem\n    //   key={\"600\"}\n    //   id={\"600\"}\n    //   ref={checkboxRef}\n    //   label={\"Select All\"}\n    //   checked={isBoxChecked.includes(\"600\")}\n    //   onChange={(isChecked) => {\n    //     handleSelectAll();\n    //   }}\n    // />\n  );\n  function clickHandler() {\n    let selectedItems = isBoxChecked.filter((entry) => {\n      return entry !== \"600\";\n    });\n    props.onClick(selectedItems.toString());\n  }\n  return (\n    <div style={{ color: `${props.color}` }}>\n      <h3>Delte {props.title}</h3>\n      {masterCheckbox}\n      <br></br>\n      {checklist}\n      {button}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}